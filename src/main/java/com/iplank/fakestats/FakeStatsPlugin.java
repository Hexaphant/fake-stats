package com.iplank.fakestats;

import com.google.inject.Provides;
import javax.inject.Inject;
import java.text.NumberFormat;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.api.Skill;
import net.runelite.api.events.ClientTick;
import net.runelite.api.widgets.Widget;
import net.runelite.api.widgets.WidgetID;
import net.runelite.client.callback.ClientThread;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.events.ConfigChanged;
import net.runelite.client.events.PluginChanged;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import com.iplank.fakestats.FakeStatsConfig.ModePresets;

@Slf4j
@PluginDescriptor(
	name = "Fake Stats",
	description = "Allows you to spoof Skill and Total Levels",
	tags = {"stats", "spoof", "fake", "skills", "total"},
	conflicts = {"Virtual Levels", "Effective Levels"},
	enabledByDefault = false
)
public class FakeStatsPlugin extends Plugin
{
	@Inject
	private Client client;

	@Inject
	private FakeStatsConfig config;

	@Inject
	private ClientThread clientThread;

	private CachedConfig cachedConfig = new CachedConfig();

	@Override
	protected void startUp() throws Exception
	{
		cachedConfig.setConfig(config);
		cachedConfig.cacheValues();
		log.info("Fake Stats started!");
	}

	@Override
	protected void shutDown() throws Exception
	{
		clientThread.invoke(this::simulateSkillChange);
		log.info("Fake Stats stopped!");
	}

	@Subscribe
	public void onPluginChanged(PluginChanged pluginChanged)
	{
		if (pluginChanged.getPlugin() == this)
		{
			cachedConfig.cacheValues();
			clientThread.invoke(this::simulateSkillChange);
		}
	}

	@Subscribe
	public void onConfigChanged(ConfigChanged configChanged)
	{
		if (!configChanged.getGroup().equals("fakestats"))
		{
			return;
		}
		cachedConfig.cacheValues();
		clientThread.invoke(this::simulateSkillChange);
	}

	private static final String TOTAL_LEVEL_TEXT_PREFIX = "Total level:<br>";

	@Subscribe
	public void onClientTick(ClientTick clientTick)
	{
        // begin autogenerated
        // Attack Logic
        if (cachedConfig.spoofAttack) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 1);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.attackLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.attackLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.attackLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.attackLevel);
                    }
                    if (cachedConfig.attackRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.attackLevel);
                    }
                }
            }
        }

        // Strength Logic
        if (cachedConfig.spoofStrength) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 2);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.strengthLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.strengthLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.strengthLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.strengthLevel);
                    }
                    if (cachedConfig.strengthRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.strengthLevel);
                    }
                }
            }
        }

        // Defence Logic
        if (cachedConfig.spoofDefence) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 3);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.defenceLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.defenceLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.defenceLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.defenceLevel);
                    }
                    if (cachedConfig.defenceRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.defenceLevel);
                    }
                }
            }
        }

        // Ranged Logic
        if (cachedConfig.spoofRanged) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 4);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.rangedLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.rangedLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.rangedLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.rangedLevel);
                    }
                    if (cachedConfig.rangedRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.rangedLevel);
                    }
                }
            }
        }

        // Prayer Logic
        if (cachedConfig.spoofPrayer) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 5);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.prayerLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.prayerLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.prayerLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.prayerLevel);
                    }
                    if (cachedConfig.prayerRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.prayerLevel);
                    }
                }
            }
        }

        // Magic Logic
        if (cachedConfig.spoofMagic) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 6);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.magicLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.magicLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.magicLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.magicLevel);
                    }
                    if (cachedConfig.magicRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.magicLevel);
                    }
                }
            }
        }

        // Runecraft Logic
        if (cachedConfig.spoofRunecraft) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 7);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.runecraftLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.runecraftLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.runecraftLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.runecraftLevel);
                    }
                    if (cachedConfig.runecraftRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.runecraftLevel);
                    }
                }
            }
        }

        // Construction Logic
        if (cachedConfig.spoofConstruction) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 8);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.constructionLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.constructionLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.constructionLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.constructionLevel);
                    }
                    if (cachedConfig.constructionRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.constructionLevel);
                    }
                }
            }
        }

        // Hitpoints Logic
        if (cachedConfig.spoofHitpoints) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 9);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.hitpointsLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.hitpointsLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.hitpointsLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.hitpointsLevel);
                    }
                    if (cachedConfig.hitpointsRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.hitpointsLevel);
                    }
                }
            }
        }

        // Agility Logic
        if (cachedConfig.spoofAgility) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 10);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.agilityLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.agilityLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.agilityLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.agilityLevel);
                    }
                    if (cachedConfig.agilityRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.agilityLevel);
                    }
                }
            }
        }

        // Herblore Logic
        if (cachedConfig.spoofHerblore) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 11);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.herbloreLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.herbloreLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.herbloreLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.herbloreLevel);
                    }
                    if (cachedConfig.herbloreRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.herbloreLevel);
                    }
                }
            }
        }

        // Thieving Logic
        if (cachedConfig.spoofThieving) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 12);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.thievingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.thievingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.thievingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.thievingLevel);
                    }
                    if (cachedConfig.thievingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.thievingLevel);
                    }
                }
            }
        }

        // Crafting Logic
        if (cachedConfig.spoofCrafting) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 13);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.craftingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.craftingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.craftingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.craftingLevel);
                    }
                    if (cachedConfig.craftingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.craftingLevel);
                    }
                }
            }
        }

        // Fletching Logic
        if (cachedConfig.spoofFletching) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 14);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.fletchingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.fletchingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.fletchingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.fletchingLevel);
                    }
                    if (cachedConfig.fletchingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.fletchingLevel);
                    }
                }
            }
        }

        // Slayer Logic
        if (cachedConfig.spoofSlayer) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 15);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.slayerLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.slayerLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.slayerLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.slayerLevel);
                    }
                    if (cachedConfig.slayerRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.slayerLevel);
                    }
                }
            }
        }

        // Hunter Logic
        if (cachedConfig.spoofHunter) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 16);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.hunterLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.hunterLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.hunterLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.hunterLevel);
                    }
                    if (cachedConfig.hunterRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.hunterLevel);
                    }
                }
            }
        }

        // Mining Logic
        if (cachedConfig.spoofMining) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 17);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.miningLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.miningLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.miningLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.miningLevel);
                    }
                    if (cachedConfig.miningRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.miningLevel);
                    }
                }
            }
        }

        // Smithing Logic
        if (cachedConfig.spoofSmithing) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 18);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.smithingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.smithingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.smithingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.smithingLevel);
                    }
                    if (cachedConfig.smithingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.smithingLevel);
                    }
                }
            }
        }

        // Fishing Logic
        if (cachedConfig.spoofFishing) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 19);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.fishingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.fishingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.fishingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.fishingLevel);
                    }
                    if (cachedConfig.fishingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.fishingLevel);
                    }
                }
            }
        }

        // Cooking Logic
        if (cachedConfig.spoofCooking) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 20);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.cookingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.cookingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.cookingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.cookingLevel);
                    }
                    if (cachedConfig.cookingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.cookingLevel);
                    }
                }
            }
        }

        // Firemaking Logic
        if (cachedConfig.spoofFiremaking) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 21);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.firemakingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.firemakingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.firemakingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.firemakingLevel);
                    }
                    if (cachedConfig.firemakingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.firemakingLevel);
                    }
                }
            }
        }

        // Woodcutting Logic
        if (cachedConfig.spoofWoodcutting) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 22);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.woodcuttingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.woodcuttingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.woodcuttingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.woodcuttingLevel);
                    }
                    if (cachedConfig.woodcuttingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.woodcuttingLevel);
                    }
                }
            }
        }

        // Farming Logic
        if (cachedConfig.spoofFarming) {
            Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 23);
            if (skillWidget == null) { return; }
            Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
            if (skillWidgetComponents.length >= 4) {
                if (cachedConfig.farmingLevel > 99) {
                    if (cachedConfig.virtualLevels) {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + cachedConfig.farmingLevel);
                    } else {
                        skillWidgetComponents[3].setText("" + 99);
                        skillWidgetComponents[4].setText("" + 99);
                    }
                } else {
                    if (cachedConfig.farmingLeft) {
                        skillWidgetComponents[3].setText("" + cachedConfig.farmingLevel);
                    }
                    if (cachedConfig.farmingRight) {
                        skillWidgetComponents[4].setText("" + cachedConfig.farmingLevel);
                    }
                }
            }
        }

        // end autogenerated

		// Total Level Logic
		Widget totalWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 24);
		Widget[] totalWidgetComponents = totalWidget.getStaticChildren();
		Widget widgetText = totalWidgetComponents[2];
		if (totalWidget == null || totalWidgetComponents == null) { return; }
		if (cachedConfig.preset != ModePresets.NONE) {
			switch (cachedConfig.preset) {
				case All_200M:
					// 200m the Account
					int counter200M = 0;
					while (counter200M < 23) {
						counter200M++;
						Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, counter200M);
						if (skillWidget == null) { return; }
						Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
						if (skillWidgetComponents.length >= 4) {
							skillWidgetComponents[3].setText("" + 99); // Top Level
							if (cachedConfig.virtualLevels) {
								skillWidgetComponents[4].setText("" + 126); // Bottom Level
							} else {
								skillWidgetComponents[4].setText("" + 99); // Bottom Level
							}
						}
					}
					if (cachedConfig.virtualTotal) {
						widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "2898");
					} else {
						widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "2277");
					}
					Widget widget200mEXP = client.getWidget(WidgetID.EXPERIENCE_TRACKER_GROUP_ID, 10);
					widget200mEXP.setText("4,600,000,000");
					break;
				case Maxed:
					// Max the Account
					int counterMax = 0;
					while (counterMax < 23) {
						counterMax++;
						Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, counterMax);
						if (skillWidget == null) {
							return;
						}
						Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
						if (skillWidgetComponents.length >= 4) {
							skillWidgetComponents[3].setText("" + 99); // Top Level
							skillWidgetComponents[4].setText("" + 99); // Bottom Level
						}
					}
					widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "2277");
					Widget widgetMaxEXP = client.getWidget(WidgetID.EXPERIENCE_TRACKER_GROUP_ID, 10);
					long totalMaxExp = ((13_034_431 * 23) + client.getOverallExperience()); // Exact Max EXP plus Actual EXP
					String formatted = NumberFormat.getInstance().format(totalMaxExp);
					widgetMaxEXP.setText("" + formatted);
					break;
				case Level_Three:
					// Level 3 the Account
					int counterLevel3 = 0;
					while (counterLevel3 < 23) {
						counterLevel3++;
						Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, counterLevel3);
						if (skillWidget == null) { return; }
						Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
						if (skillWidgetComponents.length >= 4) {
							if (counterLevel3 == 9) {
								skillWidgetComponents[3].setText("" + 10); // Top Level
								skillWidgetComponents[4].setText("" + 10); // Bottom Level
							} else {
								skillWidgetComponents[3].setText("" + 1); // Top Level
								skillWidgetComponents[4].setText("" + 1); // Bottom Level
							}
						}
					}
					widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "32");
					Widget widgetLevel3EXP = client.getWidget(WidgetID.EXPERIENCE_TRACKER_GROUP_ID, 10);
					widgetLevel3EXP.setText("1,154");
					break;
				default:
					// If Random Value is Set (? - Edge Case)
					break;
			}
		} else if (cachedConfig.overrideTotalText) {
			widgetText.setText(cachedConfig.totalLevelText);
		} else if (cachedConfig.spoofTotal) {
			// Spoof Total from Config
			widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + cachedConfig.totalLevel);
		} else if (cachedConfig.fakeSpoofTotal) {
			// Spoof Fake Total Level
			int total = 0;
			// begin autogenerated
			if (cachedConfig.spoofAttack) {
				if (cachedConfig.attackLevel <= 99) {
					total += cachedConfig.attackLevel;
				} else if (cachedConfig.attackLevel > 99 && cachedConfig.attackLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.attackLevel;
				} else if (cachedConfig.attackLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.attackLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.ATTACK);
			}
			if (cachedConfig.spoofStrength) {
				if (cachedConfig.strengthLevel <= 99) {
					total += cachedConfig.strengthLevel;
				} else if (cachedConfig.strengthLevel > 99 && cachedConfig.strengthLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.strengthLevel;
				} else if (cachedConfig.strengthLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.strengthLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.STRENGTH);
			}
			if (cachedConfig.spoofDefence) {
				if (cachedConfig.defenceLevel <= 99) {
					total += cachedConfig.defenceLevel;
				} else if (cachedConfig.defenceLevel > 99 && cachedConfig.defenceLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.defenceLevel;
				} else if (cachedConfig.defenceLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.defenceLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.DEFENCE);
			}
			if (cachedConfig.spoofRanged) {
				if (cachedConfig.rangedLevel <= 99) {
					total += cachedConfig.rangedLevel;
				} else if (cachedConfig.rangedLevel > 99 && cachedConfig.rangedLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.rangedLevel;
				} else if (cachedConfig.rangedLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.rangedLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.RANGED);
			}
			if (cachedConfig.spoofPrayer) {
				if (cachedConfig.prayerLevel <= 99) {
					total += cachedConfig.prayerLevel;
				} else if (cachedConfig.prayerLevel > 99 && cachedConfig.prayerLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.prayerLevel;
				} else if (cachedConfig.prayerLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.prayerLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.PRAYER);
			}
			if (cachedConfig.spoofMagic) {
				if (cachedConfig.magicLevel <= 99) {
					total += cachedConfig.magicLevel;
				} else if (cachedConfig.magicLevel > 99 && cachedConfig.magicLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.magicLevel;
				} else if (cachedConfig.magicLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.magicLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.MAGIC);
			}
			if (cachedConfig.spoofRunecraft) {
				if (cachedConfig.runecraftLevel <= 99) {
					total += cachedConfig.runecraftLevel;
				} else if (cachedConfig.runecraftLevel > 99 && cachedConfig.runecraftLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.runecraftLevel;
				} else if (cachedConfig.runecraftLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.runecraftLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.RUNECRAFT);
			}
			if (cachedConfig.spoofConstruction) {
				if (cachedConfig.constructionLevel <= 99) {
					total += cachedConfig.constructionLevel;
				} else if (cachedConfig.constructionLevel > 99 && cachedConfig.constructionLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.constructionLevel;
				} else if (cachedConfig.constructionLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.constructionLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.CONSTRUCTION);
			}
			if (cachedConfig.spoofHitpoints) {
				if (cachedConfig.hitpointsLevel <= 99) {
					total += cachedConfig.hitpointsLevel;
				} else if (cachedConfig.hitpointsLevel > 99 && cachedConfig.hitpointsLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.hitpointsLevel;
				} else if (cachedConfig.hitpointsLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.hitpointsLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.HITPOINTS);
			}
			if (cachedConfig.spoofAgility) {
				if (cachedConfig.agilityLevel <= 99) {
					total += cachedConfig.agilityLevel;
				} else if (cachedConfig.agilityLevel > 99 && cachedConfig.agilityLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.agilityLevel;
				} else if (cachedConfig.agilityLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.agilityLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.AGILITY);
			}
			if (cachedConfig.spoofHerblore) {
				if (cachedConfig.herbloreLevel <= 99) {
					total += cachedConfig.herbloreLevel;
				} else if (cachedConfig.herbloreLevel > 99 && cachedConfig.herbloreLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.herbloreLevel;
				} else if (cachedConfig.herbloreLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.herbloreLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.HERBLORE);
			}
			if (cachedConfig.spoofThieving) {
				if (cachedConfig.thievingLevel <= 99) {
					total += cachedConfig.thievingLevel;
				} else if (cachedConfig.thievingLevel > 99 && cachedConfig.thievingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.thievingLevel;
				} else if (cachedConfig.thievingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.thievingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.THIEVING);
			}
			if (cachedConfig.spoofCrafting) {
				if (cachedConfig.craftingLevel <= 99) {
					total += cachedConfig.craftingLevel;
				} else if (cachedConfig.craftingLevel > 99 && cachedConfig.craftingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.craftingLevel;
				} else if (cachedConfig.craftingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.craftingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.CRAFTING);
			}
			if (cachedConfig.spoofFletching) {
				if (cachedConfig.fletchingLevel <= 99) {
					total += cachedConfig.fletchingLevel;
				} else if (cachedConfig.fletchingLevel > 99 && cachedConfig.fletchingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.fletchingLevel;
				} else if (cachedConfig.fletchingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.fletchingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FLETCHING);
			}
			if (cachedConfig.spoofSlayer) {
				if (cachedConfig.slayerLevel <= 99) {
					total += cachedConfig.slayerLevel;
				} else if (cachedConfig.slayerLevel > 99 && cachedConfig.slayerLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.slayerLevel;
				} else if (cachedConfig.slayerLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.slayerLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.SLAYER);
			}
			if (cachedConfig.spoofHunter) {
				if (cachedConfig.hunterLevel <= 99) {
					total += cachedConfig.hunterLevel;
				} else if (cachedConfig.hunterLevel > 99 && cachedConfig.hunterLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.hunterLevel;
				} else if (cachedConfig.hunterLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.hunterLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.HUNTER);
			}
			if (cachedConfig.spoofMining) {
				if (cachedConfig.miningLevel <= 99) {
					total += cachedConfig.miningLevel;
				} else if (cachedConfig.miningLevel > 99 && cachedConfig.miningLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.miningLevel;
				} else if (cachedConfig.miningLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.miningLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.MINING);
			}
			if (cachedConfig.spoofSmithing) {
				if (cachedConfig.smithingLevel <= 99) {
					total += cachedConfig.smithingLevel;
				} else if (cachedConfig.smithingLevel > 99 && cachedConfig.smithingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.smithingLevel;
				} else if (cachedConfig.smithingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.smithingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.SMITHING);
			}
			if (cachedConfig.spoofFishing) {
				if (cachedConfig.fishingLevel <= 99) {
					total += cachedConfig.fishingLevel;
				} else if (cachedConfig.fishingLevel > 99 && cachedConfig.fishingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.fishingLevel;
				} else if (cachedConfig.fishingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.fishingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FISHING);
			}
			if (cachedConfig.spoofCooking) {
				if (cachedConfig.cookingLevel <= 99) {
					total += cachedConfig.cookingLevel;
				} else if (cachedConfig.cookingLevel > 99 && cachedConfig.cookingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.cookingLevel;
				} else if (cachedConfig.cookingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.cookingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.COOKING);
			}
			if (cachedConfig.spoofFiremaking) {
				if (cachedConfig.firemakingLevel <= 99) {
					total += cachedConfig.firemakingLevel;
				} else if (cachedConfig.firemakingLevel > 99 && cachedConfig.firemakingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.firemakingLevel;
				} else if (cachedConfig.firemakingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.firemakingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FIREMAKING);
			}
			if (cachedConfig.spoofWoodcutting) {
				if (cachedConfig.woodcuttingLevel <= 99) {
					total += cachedConfig.woodcuttingLevel;
				} else if (cachedConfig.woodcuttingLevel > 99 && cachedConfig.woodcuttingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.woodcuttingLevel;
				} else if (cachedConfig.woodcuttingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.woodcuttingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.WOODCUTTING);
			}
			if (cachedConfig.spoofFarming) {
				if (cachedConfig.farmingLevel <= 99) {
					total += cachedConfig.farmingLevel;
				} else if (cachedConfig.farmingLevel > 99 && cachedConfig.farmingLevel <= 126 && cachedConfig.virtualTotal) {
					total += cachedConfig.farmingLevel;
				} else if (cachedConfig.farmingLevel > 126 && cachedConfig.virtualTotal) {
					total += 126;
				} else if (cachedConfig.farmingLevel > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FARMING);
			}
			// end autogenerated
			widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + total);
		}
	}

	private void simulateSkillChange()
	{
		// this fires widgets listening for all skill changes
		// credit: https://github.com/runelite/runelite/blob/003a92fb7b4641560569470b1e3431336284db94/runelite-client/src/main/java/net/runelite/client/plugins/virtuallevels/VirtualLevelsPlugin.java#L140-L150
		for (Skill skill : Skill.values())
		{
			if (skill != Skill.OVERALL)
			{
				client.queueChangedSkill(skill);
			}
		}
	}

	@Provides
	FakeStatsConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(FakeStatsConfig.class);
	}
}

class CachedConfig {
	// Config Item
	private FakeStatsConfig config;

	// Toggleable Variables
	public boolean fakeSpoofTotal;
	public boolean virtualLevels;
	public boolean virtualTotal;

	// Preset Variable
	public ModePresets preset;

	// Total Variables
	public boolean spoofTotal;
	public int totalLevel;
	public boolean overrideTotalText;
	public String totalLevelText;

	// Skill Variables
	public boolean spoofAttack;
	public int attackLevel;
	public boolean attackLeft;
	public boolean attackRight;
	public boolean spoofStrength;
	public int strengthLevel;
	public boolean strengthLeft;
	public boolean strengthRight;
	public boolean spoofDefence;
	public int defenceLevel;
	public boolean defenceLeft;
	public boolean defenceRight;
	public boolean spoofRanged;
	public int rangedLevel;
	public boolean rangedLeft;
	public boolean rangedRight;
	public boolean spoofPrayer;
	public int prayerLevel;
	public boolean prayerLeft;
	public boolean prayerRight;
	public boolean spoofMagic;
	public int magicLevel;
	public boolean magicLeft;
	public boolean magicRight;
	public boolean spoofRunecraft;
	public int runecraftLevel;
	public boolean runecraftLeft;
	public boolean runecraftRight;
	public boolean spoofConstruction;
	public int constructionLevel;
	public boolean constructionLeft;
	public boolean constructionRight;
	public boolean spoofHitpoints;
	public int hitpointsLevel;
	public boolean hitpointsLeft;
	public boolean hitpointsRight;
	public boolean spoofAgility;
	public int agilityLevel;
	public boolean agilityLeft;
	public boolean agilityRight;
	public boolean spoofHerblore;
	public int herbloreLevel;
	public boolean herbloreLeft;
	public boolean herbloreRight;
	public boolean spoofThieving;
	public int thievingLevel;
	public boolean thievingLeft;
	public boolean thievingRight;
	public boolean spoofFletching;
	public int fletchingLevel;
	public boolean fletchingLeft;
	public boolean fletchingRight;
	public boolean spoofCrafting;
	public int craftingLevel;
	public boolean craftingLeft;
	public boolean craftingRight;
	public boolean spoofSlayer;
	public int slayerLevel;
	public boolean slayerLeft;
	public boolean slayerRight;
	public boolean spoofHunter;
	public int hunterLevel;
	public boolean hunterLeft;
	public boolean hunterRight;
	public boolean spoofMining;
	public int miningLevel;
	public boolean miningLeft;
	public boolean miningRight;
	public boolean spoofSmithing;
	public int smithingLevel;
	public boolean smithingLeft;
	public boolean smithingRight;
	public boolean spoofFishing;
	public int fishingLevel;
	public boolean fishingLeft;
	public boolean fishingRight;
	public boolean spoofCooking;
	public int cookingLevel;
	public boolean cookingLeft;
	public boolean cookingRight;
	public boolean spoofFiremaking;
	public int firemakingLevel;
	public boolean firemakingLeft;
	public boolean firemakingRight;
	public boolean spoofWoodcutting;
	public int woodcuttingLevel;
	public boolean woodcuttingLeft;
	public boolean woodcuttingRight;
	public boolean spoofFarming;
	public int farmingLevel;
	public boolean farmingLeft;
	public boolean farmingRight;

	// Obtain Config
	public void setConfig(FakeStatsConfig config) {
		this.config = config;
	}

	// Cache Values
	public void cacheValues() {
		// Toggleable Variables
		fakeSpoofTotal = config.fakeSpoofTotal();
		virtualLevels = config.virtualLevels();
		virtualTotal = config.virtualTotal();

		// Preset Variable
		preset = config.preset();

		// Total Variables
		spoofTotal = config.spoofTotal();
		totalLevel = config.totalLevel();
		overrideTotalText = config.overrideTotalText();
		totalLevelText = config.totalLevelText();

		// Skill Variables
		spoofAttack = config.spoofAttack();
		attackLevel = config.attackLevel();
		attackLeft = config.attackLeft();
		attackRight = config.attackRight();
		spoofStrength = config.spoofStrength();
		strengthLevel = config.strengthLevel();
		strengthLeft = config.strengthLeft();
		strengthRight = config.strengthRight();
		spoofDefence = config.spoofDefence();
		defenceLevel = config.defenceLevel();
		defenceLeft = config.defenceLeft();
		defenceRight = config.defenceRight();
		spoofRanged = config.spoofRanged();
		rangedLevel = config.rangedLevel();
		rangedLeft = config.rangedLeft();
		rangedRight = config.rangedRight();
		spoofPrayer = config.spoofPrayer();
		prayerLevel = config.prayerLevel();
		prayerLeft = config.prayerLeft();
		prayerRight = config.prayerRight();
		spoofMagic = config.spoofMagic();
		magicLevel = config.magicLevel();
		magicLeft = config.magicLeft();
		magicRight = config.magicRight();
		spoofRunecraft = config.spoofRunecraft();
		runecraftLevel = config.runecraftLevel();
		runecraftLeft = config.runecraftLeft();
		runecraftRight = config.runecraftRight();
		spoofConstruction = config.spoofConstruction();
		constructionLevel = config.constructionLevel();
		constructionLeft = config.constructionLeft();
		constructionRight = config.constructionRight();
		spoofHitpoints = config.spoofHitpoints();
		hitpointsLevel = config.hitpointsLevel();
		hitpointsLeft = config.hitpointsLeft();
		hitpointsRight = config.hitpointsRight();
		spoofAgility = config.spoofAgility();
		agilityLevel = config.agilityLevel();
		agilityLeft = config.agilityLeft();
		agilityRight = config.agilityRight();
		spoofHerblore = config.spoofHerblore();
		herbloreLevel = config.herbloreLevel();
		herbloreLeft = config.herbloreLeft();
		herbloreRight = config.herbloreRight();
		spoofThieving = config.spoofThieving();
		thievingLevel = config.thievingLevel();
		thievingLeft = config.thievingLeft();
		thievingRight = config.thievingRight();
		spoofFletching = config.spoofFletching();
		fletchingLevel = config.fletchingLevel();
		fletchingLeft = config.fletchingLeft();
		fletchingRight = config.fletchingRight();
		spoofCrafting = config.spoofCrafting();
		craftingLevel = config.craftingLevel();
		craftingLeft = config.craftingLeft();
		craftingRight = config.craftingRight();
		spoofSlayer = config.spoofSlayer();
		slayerLevel = config.slayerLevel();
		slayerLeft = config.slayerLeft();
		slayerRight = config.slayerRight();
		spoofHunter = config.spoofHunter();
		hunterLevel = config.hunterLevel();
		hunterLeft = config.hunterLeft();
		hunterRight = config.hunterRight();
		spoofMining = config.spoofMining();
		miningLevel = config.miningLevel();
		miningLeft = config.miningLeft();
		miningRight = config.miningRight();
		spoofSmithing = config.spoofSmithing();
		smithingLevel = config.smithingLevel();
		smithingLeft = config.smithingLeft();
		smithingRight = config.smithingRight();
		spoofFishing = config.spoofFishing();
		fishingLevel = config.fishingLevel();
		fishingLeft = config.fishingLeft();
		fishingRight = config.fishingRight();
		spoofCooking = config.spoofCooking();
		cookingLevel = config.cookingLevel();
		cookingLeft = config.cookingLeft();
		cookingRight = config.cookingRight();
		spoofFiremaking = config.spoofFiremaking();
		firemakingLevel = config.firemakingLevel();
		firemakingLeft = config.firemakingLeft();
		firemakingRight = config.firemakingRight();
		spoofWoodcutting = config.spoofWoodcutting();
		woodcuttingLevel = config.woodcuttingLevel();
		woodcuttingLeft = config.woodcuttingLeft();
		woodcuttingRight = config.woodcuttingRight();
		spoofFarming = config.spoofFarming();
		farmingLevel = config.farmingLevel();
		farmingLeft = config.farmingLeft();
		farmingRight = config.farmingRight();
	}
}
