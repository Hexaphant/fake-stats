package com.iplank.fakestats;

import com.google.inject.Provides;
import javax.inject.Inject;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.api.Skill;
import net.runelite.api.events.ClientTick;
import net.runelite.api.widgets.Widget;
import net.runelite.api.widgets.WidgetID;
import net.runelite.client.callback.ClientThread;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.events.ConfigChanged;
import net.runelite.client.events.PluginChanged;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import com.iplank.fakestats.FakeStatsConfig.ModePresets;

@Slf4j
@PluginDescriptor(
	name = "Fake Stats",
	description = "Allows you to spoof Skill and Total Levels",
	tags = {"stats", "spoof", "fake", "skills", "total"},
	conflicts = {"Virtual Levels", "Effective Levels"},
	enabledByDefault = false
)
public class FakeStatsPlugin extends Plugin
{
	@Inject
	private Client client;

	@Inject
	private FakeStatsConfig config;

	@Inject
	private ClientThread clientThread;

	@Override
	protected void startUp() throws Exception
	{
		log.info("Fake Stats started!");
	}

	@Override
	protected void shutDown() throws Exception
	{
		clientThread.invoke(this::simulateSkillChange);
		log.info("Fake Stats stopped!");
	}

	@Subscribe
	public void onPluginChanged(PluginChanged pluginChanged)
	{
		// this is guaranteed to be called after the plugin has been registered by the eventbus. startUp is not.
		if (pluginChanged.getPlugin() == this)
		{
			clientThread.invoke(this::simulateSkillChange);
		}
	}

	@Subscribe
	public void onConfigChanged(ConfigChanged configChanged)
	{
		if (!configChanged.getGroup().equals("fakestats"))
		{
			return;
		}

		clientThread.invoke(this::simulateSkillChange);
	}

	private static final String TOTAL_LEVEL_TEXT_PREFIX = "Total level:<br>";

	@Subscribe
	public void onClientTick(ClientTick clientTick)
	{
		// begin autogenerated
		// Attack Logic
		if (config.spoofAttack()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 1);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.attackLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.attackLevel());
				}
				if (config.attackLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.attackLevel());
				}
			}
		}

		// Strength Logic
		if (config.spoofStrength()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 2);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.strengthLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.strengthLevel());
				}
				if (config.strengthLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.strengthLevel());
				}
			}
		}

		// Defence Logic
		if (config.spoofDefence()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 3);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.defenceLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.defenceLevel());
				}
				if (config.defenceLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.defenceLevel());
				}
			}
		}

		// Ranged Logic
		if (config.spoofRanged()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 4);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.rangedLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.rangedLevel());
				}
				if (config.rangedLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.rangedLevel());
				}
			}
		}

		// Prayer Logic
		if (config.spoofPrayer()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 5);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.prayerLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.prayerLevel());
				}
				if (config.prayerLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.prayerLevel());
				}
			}
		}

		// Magic Logic
		if (config.spoofMagic()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 6);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.magicLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.magicLevel());
				}
				if (config.magicLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.magicLevel());
				}
			}
		}

		// Runecraft Logic
		if (config.spoofRunecraft()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 7);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.runecraftLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.runecraftLevel());
				}
				if (config.runecraftLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.runecraftLevel());
				}
			}
		}

		// Construction Logic
		if (config.spoofConstruction()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 8);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.constructionLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.constructionLevel());
				}
				if (config.constructionLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.constructionLevel());
				}
			}
		}

		// Hitpoints Logic
		if (config.spoofHitpoints()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 9);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.hitpointsLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.hitpointsLevel());
				}
				if (config.hitpointsLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.hitpointsLevel());
				}
			}
		}

		// Agility Logic
		if (config.spoofAgility()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 10);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.agilityLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.agilityLevel());
				}
				if (config.agilityLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.agilityLevel());
				}
			}
		}

		// Herblore Logic
		if (config.spoofHerblore()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 11);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.herbloreLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.herbloreLevel());
				}
				if (config.herbloreLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.herbloreLevel());
				}
			}
		}

		// Thieving Logic
		if (config.spoofThieving()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 12);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.thievingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.thievingLevel());
				}
				if (config.thievingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.thievingLevel());
				}
			}
		}

		// Fletching Logic
		if (config.spoofFletching()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 13);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.fletchingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.fletchingLevel());
				}
				if (config.fletchingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.fletchingLevel());
				}
			}
		}

		// Crafting Logic
		if (config.spoofCrafting()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 14);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.craftingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.craftingLevel());
				}
				if (config.craftingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.craftingLevel());
				}
			}
		}

		// Slayer Logic
		if (config.spoofSlayer()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 15);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.slayerLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.slayerLevel());
				}
				if (config.slayerLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.slayerLevel());
				}
			}
		}

		// Hunter Logic
		if (config.spoofHunter()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 16);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.hunterLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.hunterLevel());
				}
				if (config.hunterLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.hunterLevel());
				}
			}
		}

		// Mining Logic
		if (config.spoofMining()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 17);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.miningLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.miningLevel());
				}
				if (config.miningLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.miningLevel());
				}
			}
		}

		// Smithing Logic
		if (config.spoofSmithing()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 18);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.smithingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.smithingLevel());
				}
				if (config.smithingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.smithingLevel());
				}
			}
		}

		// Fishing Logic
		if (config.spoofFishing()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 19);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.fishingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.fishingLevel());
				}
				if (config.fishingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.fishingLevel());
				}
			}
		}

		// Cooking Logic
		if (config.spoofCooking()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 20);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.cookingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.cookingLevel());
				}
				if (config.cookingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.cookingLevel());
				}
			}
		}

		// Firemaking Logic
		if (config.spoofFiremaking()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 21);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.firemakingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.firemakingLevel());
				}
				if (config.firemakingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.firemakingLevel());
				}
			}
		}

		// Woodcutting Logic
		if (config.spoofWoodcutting()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 22);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.woodcuttingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.woodcuttingLevel());
				}
				if (config.woodcuttingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.woodcuttingLevel());
				}
			}
		}

		// Farming Logic
		if (config.spoofFarming()) {
			Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 23);
			if (skillWidget == null) { return; }
			Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
			if (skillWidgetComponents.length >= 4) {
				if (config.farmingLevel() > 99) {
					skillWidgetComponents[3].setText("" + 99);
				} else {
					skillWidgetComponents[3].setText("" + config.farmingLevel());
				}
				if (config.farmingLevel() > 126) {
					skillWidgetComponents[4].setText("" + 126);
				} else {
					skillWidgetComponents[4].setText("" + config.farmingLevel());
				}
			}
		}
		// end autogenerated

		// Total Level Logic
		Widget totalWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, 24);
		Widget[] totalWidgetComponents = totalWidget.getStaticChildren();
		Widget widgetText = totalWidgetComponents[2];
		if (totalWidget == null || totalWidgetComponents == null) { return; }
		if (config.preset() != ModePresets.NONE) {
			switch (config.preset()) {
				case All_200M:
					// 200m the Account
					int counter200M = 0;
					while (counter200M < 23) {
						counter200M++;
						Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, counter200M);
						if (skillWidget == null) { return; }
						Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
						if (skillWidgetComponents.length >= 4) {
							skillWidgetComponents[3].setText("" + 99); // Top Level
							skillWidgetComponents[4].setText("" + 126); // Bottom Level
						}
					}
					if (config.virtualTotal()) {
						widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "2898");
					} else {
						widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "2277");
					}
					break;
				case Maxed:
					// Max the Account
					int counterMax = 0;
					while (counterMax < 23) {
						counterMax++;
						Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, counterMax);
						if (skillWidget == null) {
							return;
						}
						Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
						if (skillWidgetComponents.length >= 4) {
							skillWidgetComponents[3].setText("" + 99); // Top Level
							skillWidgetComponents[4].setText("" + 99); // Bottom Level
						}
					}
					widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "2277");
					break;
				case Level_Three:
					// Level 3 the Account
					int counterLevel3 = 0;
					while (counterLevel3 < 23) {
						counterLevel3++;
						Widget skillWidget = client.getWidget(WidgetID.SKILLS_GROUP_ID, counterLevel3);
						if (skillWidget == null) { return; }
						Widget[] skillWidgetComponents = skillWidget.getDynamicChildren();
						if (skillWidgetComponents.length >= 4) {
							if (counterLevel3 == 9) {
								skillWidgetComponents[3].setText("" + 10); // Top Level
								skillWidgetComponents[4].setText("" + 10); // Bottom Level
							} else {
								skillWidgetComponents[3].setText("" + 1); // Top Level
								skillWidgetComponents[4].setText("" + 1); // Bottom Level
							}
						}
					}
					widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + "32");
					break;
				default:
					// If Random Value is Set (? - Edge Case)
					break;
			}
		} else if (config.overrideTotalText()) {
			widgetText.setText(config.totalLevelText());
		} else if (config.spoofTotal()) {
			// Spoof Total from Config
			widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + config.totalLevel());
		} else if (config.fakeSpoofTotal()) {
			// Spoof Fake Total Level
			int total = 0;
			// begin autogenerated
			if (config.spoofAttack()) {
				if (config.attackLevel() <= 99) {
					total += config.attackLevel();
				} else if (config.attackLevel() > 99 && config.attackLevel() <= 126 && config.virtualTotal()) {
					total += config.attackLevel();
				} else if (config.attackLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.attackLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.ATTACK);
			}
			if (config.spoofStrength()) {
				if (config.strengthLevel() <= 99) {
					total += config.strengthLevel();
				} else if (config.strengthLevel() > 99 && config.strengthLevel() <= 126 && config.virtualTotal()) {
					total += config.strengthLevel();
				} else if (config.strengthLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.strengthLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.STRENGTH);
			}
			if (config.spoofDefence()) {
				if (config.defenceLevel() <= 99) {
					total += config.defenceLevel();
				} else if (config.defenceLevel() > 99 && config.defenceLevel() <= 126 && config.virtualTotal()) {
					total += config.defenceLevel();
				} else if (config.defenceLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.defenceLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.DEFENCE);
			}
			if (config.spoofRanged()) {
				if (config.rangedLevel() <= 99) {
					total += config.rangedLevel();
				} else if (config.rangedLevel() > 99 && config.rangedLevel() <= 126 && config.virtualTotal()) {
					total += config.rangedLevel();
				} else if (config.rangedLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.rangedLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.RANGED);
			}
			if (config.spoofPrayer()) {
				if (config.prayerLevel() <= 99) {
					total += config.prayerLevel();
				} else if (config.prayerLevel() > 99 && config.prayerLevel() <= 126 && config.virtualTotal()) {
					total += config.prayerLevel();
				} else if (config.prayerLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.prayerLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.PRAYER);
			}
			if (config.spoofMagic()) {
				if (config.magicLevel() <= 99) {
					total += config.magicLevel();
				} else if (config.magicLevel() > 99 && config.magicLevel() <= 126 && config.virtualTotal()) {
					total += config.magicLevel();
				} else if (config.magicLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.magicLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.MAGIC);
			}
			if (config.spoofRunecraft()) {
				if (config.runecraftLevel() <= 99) {
					total += config.runecraftLevel();
				} else if (config.runecraftLevel() > 99 && config.runecraftLevel() <= 126 && config.virtualTotal()) {
					total += config.runecraftLevel();
				} else if (config.runecraftLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.runecraftLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.RUNECRAFT);
			}
			if (config.spoofConstruction()) {
				if (config.constructionLevel() <= 99) {
					total += config.constructionLevel();
				} else if (config.constructionLevel() > 99 && config.constructionLevel() <= 126 && config.virtualTotal()) {
					total += config.constructionLevel();
				} else if (config.constructionLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.constructionLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.CONSTRUCTION);
			}
			if (config.spoofHitpoints()) {
				if (config.hitpointsLevel() <= 99) {
					total += config.hitpointsLevel();
				} else if (config.hitpointsLevel() > 99 && config.hitpointsLevel() <= 126 && config.virtualTotal()) {
					total += config.hitpointsLevel();
				} else if (config.hitpointsLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.hitpointsLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.HITPOINTS);
			}
			if (config.spoofAgility()) {
				if (config.agilityLevel() <= 99) {
					total += config.agilityLevel();
				} else if (config.agilityLevel() > 99 && config.agilityLevel() <= 126 && config.virtualTotal()) {
					total += config.agilityLevel();
				} else if (config.agilityLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.agilityLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.AGILITY);
			}
			if (config.spoofHerblore()) {
				if (config.herbloreLevel() <= 99) {
					total += config.herbloreLevel();
				} else if (config.herbloreLevel() > 99 && config.herbloreLevel() <= 126 && config.virtualTotal()) {
					total += config.herbloreLevel();
				} else if (config.herbloreLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.herbloreLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.HERBLORE);
			}
			if (config.spoofThieving()) {
				if (config.thievingLevel() <= 99) {
					total += config.thievingLevel();
				} else if (config.thievingLevel() > 99 && config.thievingLevel() <= 126 && config.virtualTotal()) {
					total += config.thievingLevel();
				} else if (config.thievingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.thievingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.THIEVING);
			}
			if (config.spoofFletching()) {
				if (config.fletchingLevel() <= 99) {
					total += config.fletchingLevel();
				} else if (config.fletchingLevel() > 99 && config.fletchingLevel() <= 126 && config.virtualTotal()) {
					total += config.fletchingLevel();
				} else if (config.fletchingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.fletchingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FLETCHING);
			}
			if (config.spoofCrafting()) {
				if (config.craftingLevel() <= 99) {
					total += config.craftingLevel();
				} else if (config.craftingLevel() > 99 && config.craftingLevel() <= 126 && config.virtualTotal()) {
					total += config.craftingLevel();
				} else if (config.craftingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.craftingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.CRAFTING);
			}
			if (config.spoofSlayer()) {
				if (config.slayerLevel() <= 99) {
					total += config.slayerLevel();
				} else if (config.slayerLevel() > 99 && config.slayerLevel() <= 126 && config.virtualTotal()) {
					total += config.slayerLevel();
				} else if (config.slayerLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.slayerLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.SLAYER);
			}
			if (config.spoofHunter()) {
				if (config.hunterLevel() <= 99) {
					total += config.hunterLevel();
				} else if (config.hunterLevel() > 99 && config.hunterLevel() <= 126 && config.virtualTotal()) {
					total += config.hunterLevel();
				} else if (config.hunterLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.hunterLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.HUNTER);
			}
			if (config.spoofMining()) {
				if (config.miningLevel() <= 99) {
					total += config.miningLevel();
				} else if (config.miningLevel() > 99 && config.miningLevel() <= 126 && config.virtualTotal()) {
					total += config.miningLevel();
				} else if (config.miningLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.miningLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.MINING);
			}
			if (config.spoofSmithing()) {
				if (config.smithingLevel() <= 99) {
					total += config.smithingLevel();
				} else if (config.smithingLevel() > 99 && config.smithingLevel() <= 126 && config.virtualTotal()) {
					total += config.smithingLevel();
				} else if (config.smithingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.smithingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.SMITHING);
			}
			if (config.spoofFishing()) {
				if (config.fishingLevel() <= 99) {
					total += config.fishingLevel();
				} else if (config.fishingLevel() > 99 && config.fishingLevel() <= 126 && config.virtualTotal()) {
					total += config.fishingLevel();
				} else if (config.fishingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.fishingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FISHING);
			}
			if (config.spoofCooking()) {
				if (config.cookingLevel() <= 99) {
					total += config.cookingLevel();
				} else if (config.cookingLevel() > 99 && config.cookingLevel() <= 126 && config.virtualTotal()) {
					total += config.cookingLevel();
				} else if (config.cookingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.cookingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.COOKING);
			}
			if (config.spoofFiremaking()) {
				if (config.firemakingLevel() <= 99) {
					total += config.firemakingLevel();
				} else if (config.firemakingLevel() > 99 && config.firemakingLevel() <= 126 && config.virtualTotal()) {
					total += config.firemakingLevel();
				} else if (config.firemakingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.firemakingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FIREMAKING);
			}
			if (config.spoofWoodcutting()) {
				if (config.woodcuttingLevel() <= 99) {
					total += config.woodcuttingLevel();
				} else if (config.woodcuttingLevel() > 99 && config.woodcuttingLevel() <= 126 && config.virtualTotal()) {
					total += config.woodcuttingLevel();
				} else if (config.woodcuttingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.woodcuttingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.WOODCUTTING);
			}
			if (config.spoofFarming()) {
				if (config.farmingLevel() <= 99) {
					total += config.farmingLevel();
				} else if (config.farmingLevel() > 99 && config.farmingLevel() <= 126 && config.virtualTotal()) {
					total += config.farmingLevel();
				} else if (config.farmingLevel() > 126 && config.virtualTotal()) {
					total += 126;
				} else if (config.farmingLevel() > 99) {
					total += 99;
				}
			} else {
				total += client.getRealSkillLevel(Skill.FARMING);
			}
			// end autogenerated
			widgetText.setText(TOTAL_LEVEL_TEXT_PREFIX + total);
		}
	}

	private void simulateSkillChange()
	{
		// this fires widgets listening for all skill changes
		// credit: https://github.com/runelite/runelite/blob/003a92fb7b4641560569470b1e3431336284db94/runelite-client/src/main/java/net/runelite/client/plugins/virtuallevels/VirtualLevelsPlugin.java#L140-L150
		for (Skill skill : Skill.values())
		{
			if (skill != Skill.OVERALL)
			{
				client.queueChangedSkill(skill);
			}
		}
	}

	@Provides
	FakeStatsConfig provideConfig(ConfigManager configManager)
	{
		return configManager.getConfig(FakeStatsConfig.class);
	}
}
